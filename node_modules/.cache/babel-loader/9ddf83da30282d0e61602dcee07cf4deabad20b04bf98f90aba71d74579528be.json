{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Libertas\\\\Desktop\\\\ATG_Project-deneme2\\\\project\\\\website\\\\src\\\\components\\\\update.js\";\nimport React, { Component } from 'react';\nimport { Button } from 'reactstrap';\nimport './css/update.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class update extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      updateState: this.props.isUpdate,\n      customerData: {\n        name: Object.values(this.props.customer)[1],\n        country: Object.values(this.props.customer)[2],\n        salary: Object.values(this.props.customer)[3],\n        profession: Object.values(this.props.customer)[4]\n      }\n    };\n    this.updateUser = elements => {\n      console.log(this.props.customer);\n      let tempArray = {\n        ...this.state.customerData\n      };\n      elements.forEach((e, index) => {\n        if (e.value !== \"\") {\n          Object.values(tempArray)[index] = e.value;\n        }\n      });\n      this.setState({\n        customerData: tempArray\n      });\n      console.log(this.state.customerData);\n    };\n  }\n  componentDidMount() {\n    document.addEventListener(\"keydown\", event => {\n      if (!this.props.isUpdate) {\n        if (event.key === \"Escape\") this.props.updateScreenState(!this.props.isUpdate);\n      }\n    });\n  }\n  render() {\n    const {\n      updateScreenState,\n      isUpdate,\n      customer\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mainContainer\",\n      hidden: isUpdate,\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"material-symbols-outlined icon\",\n        onClick: () => {\n          updateScreenState(!isUpdate);\n        },\n        children: \"close\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"updateContainer\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"customerData\",\n          children: Object.keys(customer).map((e, index) => /*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              fontWeight: 700\n            },\n            children: [e.charAt(0).toUpperCase() + e.slice(1).toLowerCase() + \" : \", /*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                fontWeight: 500\n              },\n              children: Object.values(customer)[index]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 92\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"updateInput\",\n          children: [Object.values(customer).map((e, index) => /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"updateBoxes\",\n            style: {\n              outline: \"none\"\n            },\n            placeholder: e\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 29\n          }, this)), /*#__PURE__*/_jsxDEV(Button, {\n            color: \"dark\",\n            onClick: () => {\n              this.updateUser(document.querySelectorAll(\".updateBoxes\"));\n            },\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"material-symbols-outlined\",\n              children: \"edit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 26\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this);\n  }\n}","map":{"version":3,"names":["React","Component","Button","jsxDEV","_jsxDEV","update","constructor","args","state","updateState","props","isUpdate","customerData","name","Object","values","customer","country","salary","profession","updateUser","elements","console","log","tempArray","forEach","e","index","value","setState","componentDidMount","document","addEventListener","event","key","updateScreenState","render","className","hidden","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","keys","map","style","fontWeight","charAt","toUpperCase","slice","toLowerCase","outline","placeholder","color","querySelectorAll"],"sources":["C:/Users/Libertas/Desktop/ATG_Project-deneme2/project/website/src/components/update.js"],"sourcesContent":["import React, { Component } from 'react'\r\nimport { Button } from 'reactstrap'\r\nimport './css/update.css'\r\nexport default class update extends Component {\r\n\r\n\r\n    state = {\r\n        updateState: this.props.isUpdate,\r\n        customerData: {\r\n            name : Object.values(this.props.customer)[1],\r\n            country : Object.values(this.props.customer)[2],\r\n            salary : Object.values(this.props.customer)[3],\r\n            profession : Object.values(this.props.customer)[4]\r\n        }\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n\r\n        document.addEventListener(\"keydown\", (event) => {\r\n            if (!this.props.isUpdate) {\r\n                if (event.key === \"Escape\") this.props.updateScreenState(!this.props.isUpdate)\r\n            }\r\n        })\r\n    }\r\n\r\n\r\n\r\n    updateUser = (elements) =>{\r\n        console.log(this.props.customer)\r\n        let tempArray = {...this.state.customerData}\r\n       elements.forEach((e,index)=>{\r\n            if(e.value!==\"\"){\r\n                Object.values(tempArray)[index] = e.value\r\n            }\r\n        })\r\n        this.setState({customerData : tempArray})\r\n\r\n\r\n        console.log(this.state.customerData)\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    render() {\r\n\r\n\r\n\r\n        const { updateScreenState, isUpdate, customer } = this.props\r\n\r\n        return (\r\n\r\n\r\n\r\n\r\n            <div\r\n                className='mainContainer'\r\n                hidden={isUpdate}\r\n            >\r\n                <span className='material-symbols-outlined icon'\r\n                    onClick={() => {\r\n                        updateScreenState(!isUpdate)\r\n                    }}\r\n                >close</span>\r\n                <div className='updateContainer'>\r\n                    <div className='customerData'>\r\n                        {Object.keys(customer).map((e, index) => (\r\n                            <p\r\n                                style={{ fontWeight: 700 }}\r\n                                key={index}\r\n                            >{e.charAt(0).toUpperCase() + e.slice(1).toLowerCase() + \" : \"}<span style={{ fontWeight: 500 }}>{Object.values(customer)[index]}</span></p>\r\n                        ))}\r\n                    </div>\r\n\r\n\r\n                    <div className='updateInput'>\r\n                        {Object.values(customer).map((e, index) => (\r\n                            <input\r\n                                key={index}\r\n                                className='updateBoxes'\r\n                                style={{ outline: \"none\" }}\r\n                                placeholder={e}\r\n                            ></input>\r\n                        ))}\r\n\r\n                        <Button\r\n                            color={\"dark\"}\r\n                            onClick={()=>{this.updateUser(document.querySelectorAll(\".updateBoxes\"))}}\r\n                        ><span className='material-symbols-outlined'>edit</span></Button>\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}