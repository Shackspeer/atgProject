{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Libertas\\\\Desktop\\\\ATG_Project-deneme2\\\\project\\\\website\\\\src\\\\components\\\\upload.js\";\nimport React, { Component } from \"react\";\nimport { FormGroup, Input } from \"reactstrap\";\nimport * as XLSX from 'xlsx';\nimport './css/upload.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class Upload extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      xlsxData: [],\n      fileName: ''\n    };\n    this.handleFile = event => {\n      const file = event.target.files[0];\n      this.convertExcelToJson(file);\n    };\n    this.convertExcelToJson = file => {\n      const reader = new FileReader();\n      reader.onload = event => {\n        let data = event.target.result;\n        let workbook = XLSX.read(data, {\n          type: 'binary'\n        });\n        let tempData = [];\n        workbook.SheetNames.forEach(entry => {\n          let worksheet = workbook.Sheets[entry];\n          let xlsxData = XLSX.utils.sheet_to_json(worksheet, {\n            raw: false\n          });\n          tempData.push(xlsxData);\n          console.log(xlsxData);\n        });\n        this.setState({\n          xlsxData: tempData\n        });\n      };\n      reader.readAsBinaryString(file);\n    };\n  }\n  render() {\n    const {\n      fileName\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"uploadMain\",\n      hidden: this.props.isUpload,\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"material-symbols-outlined close\",\n        onClick: () => {\n          this.props.setUploadState(!this.props.isUpload);\n        },\n        children: \"close\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"uploadContainer\",\n        children: [/*#__PURE__*/_jsxDEV(FormGroup, {\n          children: /*#__PURE__*/_jsxDEV(Input, {\n            className: \"fileInput\",\n            type: \"file\",\n            id: \"fileInput\",\n            onChange: this.handleFile\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this), this.state.xlsxData.length > 0 && /*#__PURE__*/_jsxDEV(Table, {\n          children: /*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: Object.keys(this.state.xlsxData).map((e, index) => {\n                /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: e\n                }, index, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 59,\n                  columnNumber: 25\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this);\n  }\n}","map":{"version":3,"names":["React","Component","FormGroup","Input","XLSX","jsxDEV","_jsxDEV","Upload","constructor","args","state","xlsxData","fileName","handleFile","event","file","target","files","convertExcelToJson","reader","FileReader","onload","data","result","workbook","read","type","tempData","SheetNames","forEach","entry","worksheet","Sheets","utils","sheet_to_json","raw","push","console","log","setState","readAsBinaryString","render","className","hidden","props","isUpload","children","onClick","setUploadState","_jsxFileName","lineNumber","columnNumber","id","onChange","length","Table","Object","keys","map","e","index"],"sources":["C:/Users/Libertas/Desktop/ATG_Project-deneme2/project/website/src/components/upload.js"],"sourcesContent":["import React, { Component } from \"react\";\r\nimport { FormGroup, Input } from \"reactstrap\";\r\nimport * as XLSX from 'xlsx';\r\nimport './css/upload.css';\r\n\r\nexport default class Upload extends Component {\r\n  state = {\r\n    xlsxData: [],\r\n    fileName: ''\r\n  };\r\n\r\n  handleFile = (event) => {\r\n    const file = event.target.files[0];\r\n    this.convertExcelToJson(file);\r\n  };\r\n\r\n  convertExcelToJson = (file) => {\r\n    const reader = new FileReader();\r\n    reader.onload = (event) => {\r\n      let data = event.target.result;\r\n      let workbook = XLSX.read(data, { type: 'binary' });\r\n      let tempData = [];\r\n      workbook.SheetNames.forEach((entry) => {\r\n        let worksheet = workbook.Sheets[entry];\r\n        let xlsxData = XLSX.utils.sheet_to_json(worksheet, { raw: false });\r\n        tempData.push(xlsxData);\r\n        console.log(xlsxData);\r\n      });\r\n      this.setState({ xlsxData: tempData });\r\n    };\r\n    reader.readAsBinaryString(file);\r\n  };\r\n\r\n  render() {\r\n    const { fileName } = this.state;\r\n\r\n    return (\r\n      <div className=\"uploadMain\" hidden={this.props.isUpload}>\r\n        <span\r\n          className=\"material-symbols-outlined close\"\r\n          onClick={() => { this.props.setUploadState(!this.props.isUpload) }}\r\n        >\r\n          close\r\n        </span>\r\n        <div className=\"uploadContainer\">\r\n          <FormGroup>\r\n            <Input\r\n              className=\"fileInput\"\r\n              type=\"file\"\r\n              id=\"fileInput\"\r\n              onChange={this.handleFile}\r\n            />\r\n          </FormGroup>\r\n          {this.state.xlsxData.length>0 &&(\r\n            <Table>\r\n            <thead>\r\n                <tr>\r\n                    {Object.keys(this.state.xlsxData).map((e,index)=>{\r\n                        <th key={index}>{e}</th>\r\n                    })}\r\n                </tr>\r\n            </thead>\r\n          </Table>\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}