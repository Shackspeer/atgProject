{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Libertas\\\\Desktop\\\\ATG_Project-deneme2\\\\project\\\\website\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport { Table, ListGroup, ListGroupItem, Button } from 'reactstrap';\nimport './App.css';\nimport Update from './components/updateScreen';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      customers: [],\n      isActive: false,\n      listMethods: [\"List by id\", \"List by salary\"],\n      currentMethod: \"0\",\n      isUpdate: true\n    };\n    this.updateIsSetUpdate = newState => {\n      this.setState({\n        isUpdate: newState\n      });\n    };\n    this.sortCustomersBySalary = sortParameter => {\n      const {\n        customers\n      } = this.state;\n      const sortedCustomers = [...customers];\n      switch (sortParameter) {\n        case 1:\n          {\n            sortedCustomers.sort((a, b) => a.id - b.id);\n            this.setState({\n              customers: sortedCustomers\n            });\n            break;\n          }\n        case 2:\n          {\n            sortedCustomers.sort((a, b) => a.salary - b.salary);\n            this.setState({\n              customers: sortedCustomers\n            });\n            break;\n          }\n        default:\n          {\n            break;\n          }\n      }\n    };\n    this.sendDAta = async () => {\n      const body = {\n        name: \"Emre Örnek\",\n        country: \"Turkey\"\n      };\n      const options = {\n        method: \"POST\",\n        headers: {\n          \"Content-type\": \"Application/json\"\n        },\n        body: JSON.stringify(body)\n      };\n      await fetch(\"http://localhost:4444/update/1\", options);\n    };\n    this.getCustomers = async () => {\n      await fetch(\"http://localhost:4444/customers\").then(resp => resp.json()).then(resp => this.setState({\n        customers: resp\n      }));\n    };\n    this.setCurrentListMethod = method => {\n      this.setState({\n        currentMethod: method\n      });\n    };\n    this.setUpdateState = () => {\n      this.setState({\n        isUpdate: !this.state.isUpdate\n      });\n    };\n  }\n  componentDidMount() {\n    this.getCustomers();\n  }\n  render() {\n    const {\n      customers,\n      listMethods,\n      isUpdate\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: customers.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Table, {\n          className: \"table\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: Object.keys(customers[0]).map((e, index) => /*#__PURE__*/_jsxDEV(\"th\", {\n                children: e\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 90,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: customers.map((e, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: e.id\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 99,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: e.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 100,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: e.country\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 101,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: e.salary\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 102,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: e.profession\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 103,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  color: \"success\",\n                  style: {\n                    width: 100\n                  },\n                  onClick: () => {\n                    this.setUpdateState();\n                    console.log(isUpdate);\n                  },\n                  children: \"update\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 105,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 104,\n                columnNumber: 21\n              }, this)]\n            }, e.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(ListGroup, {\n          className: \"listBar\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            style: {\n              textAlign: \"center\",\n              padding: 25\n            },\n            children: \"List Methods\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 15\n          }, this), listMethods.map((e, index) => /*#__PURE__*/_jsxDEV(ListGroupItem, {\n            tag: \"a\",\n            className: \"listSection\",\n            onClick: () => {\n              this.setCurrentListMethod(index);\n              this.sortCustomersBySalary(index + 1);\n            },\n            active: this.state.currentMethod === index ? true : false,\n            children: e\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 17\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: this.sendDAta,\n          style: {\n            zIndex: 10\n          },\n          children: \"send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this);\n  }\n}","map":{"version":3,"names":["React","Component","Table","ListGroup","ListGroupItem","Button","Update","jsxDEV","_jsxDEV","App","constructor","args","state","customers","isActive","listMethods","currentMethod","isUpdate","updateIsSetUpdate","newState","setState","sortCustomersBySalary","sortParameter","sortedCustomers","sort","a","b","id","salary","sendDAta","body","name","country","options","method","headers","JSON","stringify","fetch","getCustomers","then","resp","json","setCurrentListMethod","setUpdateState","componentDidMount","render","children","length","className","Object","keys","map","e","index","fileName","_jsxFileName","lineNumber","columnNumber","profession","color","style","width","onClick","console","log","textAlign","padding","tag","active","zIndex"],"sources":["C:/Users/Libertas/Desktop/ATG_Project-deneme2/project/website/src/App.js"],"sourcesContent":["import React, { Component} from 'react';\nimport {Table,ListGroup,ListGroupItem,Button} from 'reactstrap';\nimport './App.css';\nimport Update from './components/updateScreen'\n\n\nexport default class App extends Component {\n\n\n  state = {\n    customers : [],\n    isActive : false,\n    listMethods : [\"List by id\",\"List by salary\"],\n    currentMethod : \"0\",\n    isUpdate : true\n  }\n\n  updateIsSetUpdate = (newState) => {\n    this.setState({ isUpdate: newState });\n  };\n\n\n  sortCustomersBySalary = (sortParameter) =>{\n    const { customers } = this.state;\n    const sortedCustomers = [...customers]\n    switch (sortParameter) {\n      case 1 : {\n        sortedCustomers.sort((a,b)=>a.id-b.id)\n        this.setState({customers:sortedCustomers})\n        break\n      }\n      case 2 : {\n        sortedCustomers.sort((a,b)=>a.salary-b.salary)\n        this.setState({customers:sortedCustomers})\n        break\n      }\n      default : {\n        break\n      }\n    }\n  }\n\n  sendDAta = async () =>{\n    const body =  {\n      name : \"Emre Örnek\",\n      country : \"Turkey\"\n    }\n\n    const options = {\n      method : \"POST\",\n      headers : {\n        \"Content-type\" : \"Application/json\"\n      },\n      body : JSON.stringify(body)\n    }\n\n   await fetch(\"http://localhost:4444/update/1\",options)\n\n\n  }\n  getCustomers = async () =>{\n    await fetch(\"http://localhost:4444/customers\").then(resp=>resp.json()).then(resp=>this.setState({customers : resp}))\n  }\n\n\n  componentDidMount(){\n    this.getCustomers()\n  }\n\n  setCurrentListMethod = method =>{\n      this.setState({currentMethod : method});\n  }\n\n  setUpdateState = () =>{\n    this.setState({ isUpdate: !this.state.isUpdate })\n  }\n  \n\n  render() {\n    const {customers,listMethods,isUpdate} = this.state\n\n    return (\n      <div>\n        {customers.length > 0 && (\n          <div >\n            <Table className='table'>\n              <thead>\n                <tr>\n                  {Object.keys(customers[0]).map((e,index)=>(\n                    <th key={index}>\n                      {e}\n                    </th>\n                  ))}\n                </tr>\n              </thead>\n              <tbody>\n                {customers.map((e,index)=>(\n                  <tr key={e.id}>\n                    <td>{e.id}</td>\n                    <td>{e.name}</td>\n                    <td>{e.country}</td>\n                    <td>{e.salary}</td>\n                    <td>{e.profession}</td>\n                    <td>\n                      <Button\n                        color='success'\n                        style={{width:100}}\n                        onClick={()=>{this.setUpdateState();console.log(isUpdate)}}\n                      >update</Button>\n                    </td>\n                  </tr>\n                ))}\n              </tbody>\n            </Table>\n            <ListGroup className='listBar'>\n              <h2 style={{textAlign:\"center\",padding:25}}>List Methods</h2>\n              {listMethods.map((e,index)=>(\n                <ListGroupItem\n                tag=\"a\"\n                className='listSection' \n                key={index} \n                onClick={()=>{this.setCurrentListMethod(index);this.sortCustomersBySalary(index + 1)}} \n                active={this.state.currentMethod === index?true:false} \n                >{e}</ListGroupItem>\n              ))}\n            </ListGroup>\n\n            <button onClick={this.sendDAta} style={{zIndex:10}}>send</button>\n\n\n          </div>\n          \n          \n        )}\n       \n      </div>\n    )\n  }\n}\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}